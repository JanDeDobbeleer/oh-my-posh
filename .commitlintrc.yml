---
extends:
  - '@commitlint/config-conventional'
rules:
  body-max-line-length:
    - 2
    - always
    - 200
  type-enum:
    - 2
    - always
    - - chore
      - ci
      - docs
      - feat
      - fix
      - perf
      - refactor
      - revert
      - style
      - test
      - theme
help: |
  **Possible types**:


  `chore`:    Changes that involve maintenance or updates to build tools and dependencies.
  
              **Usage**: Use for routine tasks or updates that don’t modify source or test files.
              **Example**: `chore: update dependency versions`

  `ci`:       Updates to CI/CD configuration files and scripts.
  
              **Usage**: Use for modifications that affect continuous integration and delivery.
              **Example**: `ci: add deployment script`

  `docs`:     Changes to documentation files.
  
              **Usage**: Use for updates or corrections to documentation.
              **Example**: `docs: update API documentation`

  `feat`:     New features or enhancements.
  
              **Usage**: Use for introducing new functionalities or enhancements.
              **Example**: `feat: add user authentication`

  `fix`:      Bug fixes or corrections.
  
              **Usage**: Use for resolving bugs or issues.
              **Example**: `fix: correct typo in README`

  `perf`:     Performance improvements.
  
              **Usage**: Use for changes that enhance performance.
              **Example**: `perf: optimize image loading`

  `refactor`: Code improvements that don’t affect functionality.
  
              **Usage**: Use for restructuring or improving code without changing its behavior.
              **Example**: `refactor: simplify component logic`

  `revert`:   Reverts previous changes or commits.
  
              **Usage**: Use for undoing changes from earlier commits.
              **Example**: `revert: undo changes from commit abc123`

  `style`:    Code style and formatting changes.
  
              **Usage**: Use for changes that affect code style or formatting but not functionality.
              **Example**: `style: format code with prettier`

  `test`:     Additions or corrections to tests.
  
              **Usage**: Use for new tests or fixes to existing tests.
              **Example**: `test: add unit tests for user service`

  `theme`:    Work on or add a theme.
  
              **Usage**: Use for theme-related changes.
              **Example**: `theme: add new theme`
