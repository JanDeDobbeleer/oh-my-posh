name: Inno
on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [amd64, arm64, 386]
    defaults:
      run:
        shell: pwsh
        working-directory: ${{ github.workspace }}/packages/inno
    steps:
    - name: Checkout code üëã
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
    - name: Build installer üì¶
      id: build
      env:
        CERTIFICATE: ${{ secrets.CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        $version = $env:GITHUB_REF.TrimStart("refs/tags/v")
        ./build.ps1 -Architecture ${{ matrix.arch }}  -Version $version
    - name: Get release ‚¨áÔ∏è
      id: get_release
      uses: bruceadams/get-release@v1.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload artifacts üÜô
      uses: actions/github-script@d4560e157075e2d93aa3022b5b51a42a880f1f93
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log('environment', process.versions);

          const fs = require('fs').promises;

          const { repo: { owner, repo }, sha } = context;
          console.log({ owner, repo, sha });

          for (let file of await fs.readdir('./packages/inno/Output')) {
            console.log('uploading', file);

            await github.rest.repos.uploadReleaseAsset({
              owner, repo,
              release_id: ${{ steps.get_release.outputs.id }},
              name: file,
              data: await fs.readFile(`./packages/inno/Output/${file}`)
            });
          }
  notify:
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - name: Notify Winget Build üôãüèæ‚Äç‚ôÄÔ∏è
      uses: actions/github-script@d4560e157075e2d93aa3022b5b51a42a880f1f93
      with:
        github-token: ${{ secrets.GH_PAT }}
        script: |
          await github.request('POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches', {
            owner: 'jandedobbeleer',
            repo: '${{ github.event.repository.name }}',
            workflow_id: 'winget.yml',
            ref: 'main',
            inputs: {"version": process.env.GITHUB_REF.replace('refs/tags/v', '')}
          })
    - name: Notify Windows Store Build üëã
      uses: actions/github-script@d4560e157075e2d93aa3022b5b51a42a880f1f93
      with:
        github-token: ${{ secrets.GH_PAT }}
        script: |
          await github.request('POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches', {
            owner: 'jandedobbeleer',
            repo: '${{ github.event.repository.name }}',
            workflow_id: 'microsoft_store.yml',
            ref: 'main',
            inputs: {"version": process.env.GITHUB_REF.replace('refs/tags/v', '')}
          })

